#ifndef _HAL_H_
#define _HAL_H_
/*
************************************************************************
【File Name】Hardware Abstraction Layer 共通ヘッダー
【Description】
【Revision History】
   REV.00 2013-11-04  BY T.OOSAKI
   REV.XX 20XX-XX-XX  BY X.XXXXXX
   REV.XX 20XX-XX-XX  BY X.XXXXXX
   REV.XX 20XX-XX-XX  BY X.XXXXXX

                      (C) 2013 IPL CORPORATION All Rights Reserved
************************************************************************
*/

#include "PF_Common.h"

// 割り込み禁止と禁止状態から元状態に復帰
extern UB   HAL_DisableIr( void );
extern void HAL_ReturnIr( UB ubCCR );

/*
 * 運用側側面への関数登録インターフェース
 */

/******************************************************************************
【名称】1ミリ秒タイマ割り込み関数登録
【再入】非リエントラント
【入力】1ミリ秒タイマ割り込みで呼び出される関数ポインタ
【出力】なし
【戻値】なし
【処理】タイマ割り込み関数を登録する
******************************************************************************/
extern void HAL_OPE_EntryTmrIR_1MS(void (*fpEntryIR)(void) );

/******************************************************************************
【名称】タスクメイン関数登録
【再入】非リエントラント
【入力】タスク処理関数ポインタ
【出力】なし
【戻値】なし
【処理】タクス処理関数を登録する
******************************************************************************/
extern void HAL_OPE_EntryTaskMain(void (*fpEntryTASK)(void) );

/*
 * LED操作インターフェース
 */

#define HAL_LED_ON  (0x1) // LEDをONにする
#define HAL_LED_OFF (0x0) // LEDをOFFにする

/******************************************************************************
【名称】LED1操作関数
【再入】非リエントラント
【入力】LED1(オレンジ)状態
【出力】なし
【戻値】なし
【処理】LEDの状態を引数で指定した値に変更します
******************************************************************************/

extern void HAL_LED1_Set(UB ubLled1);

/******************************************************************************
【名称】LED2操作関数
【再入】非リエントラント
【入力】LED2(緑)状態
【出力】なし
【戻値】なし
【処理】LEDの状態を引数で指定した値に変更します
******************************************************************************/

extern void HAL_LED2_Set(UB ubLed2 );


#endif /* _HAL_H_ */
